{"version":3,"sources":["Dashboard/Histogram.js"],"names":["Histogram","props","_this","Object","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","data","cases","topConfimedCases","topActiveCases","topRecoveredCases","fetchCSV","bind","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","fetchCases","fetchTopConfimedCases","_this2","d3","concat","window","appURL","then","res","forEach","el","push","country","Confirmed","sort","a","b","Active","active","Recovered","recovered","setState","role","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","reverse","slice","_this3","moment","date","toDate","_this4","deaths","_this$state","options","legend","position","hAxis","format","horOpt","chartArea","width","title","minValue","isStacked","vAxis","bars","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","md","xl","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Body","className","react_google_charts__WEBPACK_IMPORTED_MODULE_13__","chartType","height","React","Component"],"mappings":"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","file":"static/js/17.215db8cc.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\n\nimport * as d3 from 'd3'\nimport moment from 'moment'\nimport Chart from \"react-google-charts\"\n\nclass Histogram extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: [],\n            cases: [],\n            topConfimedCases: [],\n            topActiveCases: [],\n            topRecoveredCases: []\n        }\n\n        this.fetchCSV = this.fetchCSV.bind(this)\n        this.fetchCases = this.fetchCases.bind(this)\n        this.fetchTopConfimedCases = this.fetchTopConfimedCases.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchCSV()\n        this.fetchCases()\n        this.fetchTopConfimedCases()\n    }\n\n    fetchTopConfimedCases() {\n        d3.csv(`${window.appURL}/countries-confirmed-cases-sorted.csv`)\n            .then(res => {\n                let data = []\n                let header = [\"Country\", \"total cases\", { role: 'style' }]\n                res.forEach(el => {\n                    data.push([el.country, +el.Confirmed, \"color: #e5e4e2\"])\n                })\n\n                res = res.sort((a,b) => { return a.Active - b.Active} )\n                let active = []\n                res.forEach(el => {\n                    active.push([el.country, +el.Active, \"color: #f3de8a\"])\n                })\n\n                res = res.sort((a,b) => { return a.Recovered - b.Recovered} )\n                let recovered = []\n                res.forEach(el => {\n                    recovered.push([el.country, +el.Recovered, \"color: #eb9486\"])\n                })\n                this.setState({\n                    topConfimedCases: [header, ...data.reverse().slice(0,10)],\n                    topActiveCases: [[\"Country\", \"total active\", { role: 'style' }], \n                        ...active.reverse().slice(0,10)],\n                    topRecoveredCases: [[\"Country\", \"total recovered\",{ role: 'style' }], \n                        ...recovered.reverse().slice(0,10)],\n                })\n            })\n\n    }\n\n    fetchCases() {\n        d3.csv(`${window.appURL}/total-cases-per-day.csv`)\n            .then(res => {\n                let data = [[\"date\", \"total cases\"]]\n                res.forEach(el => {\n                    data.push([moment(el.date, \"MMM D, YYYY\").toDate(), +el.cases])\n                })\n                this.setState({ cases: data })\n            })\n    }\n\n    fetchCSV() {\n        d3.csv(`${window.appURL}/total-deaths-per-day.csv`)\n            .then(res => {\n                let data = [[\"date\", \"total deaths\"]]\n                res.forEach(el => {\n                    data.push([moment(el.date, \"MMM D, YYYY\").toDate(), +el.deaths])\n                })\n                this.setState({ data: data })\n            })\n    }\n\n\n    render() {\n        const { data, cases, topConfimedCases, topActiveCases, topRecoveredCases } = this.state\n        const options = {\n            legend: { position: \"none\" },\n            hAxis: {\n                format: 'd MMM yy'\n            }\n        }\n        const horOpt = {\n            chartArea: { width: '100%' },\n            hAxis: {\n                title: 'total cases',\n                minValue: 0,\n            },\n            isStacked: true,\n            vAxis: {\n                title: 'Country',\n            },\n            bars: 'horizontal',\n        }\n\n        return (\n            <Row>\n                <Col md={6} xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Distribution of the number of <strong>deaths</strong>\n                            </h6>\n                            <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={data}\n                                options={options}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6} xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Distribution of the number of <strong>cases</strong>\n                            </h6>\n                            <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={cases}\n                                options={options}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6} xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Top 10 Countries (Confirmed Cases)\n                            </h6>\n                            <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={topConfimedCases}\n                                options={horOpt}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6} xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Top 10 Countries (Active Cases)\n                            </h6>\n                            <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={topActiveCases}\n                                options={horOpt}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6} xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Top 10 Countries (Recovered Cases)\n                            </h6>\n                            <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={topRecoveredCases}\n                                options={horOpt}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n        )\n    }\n}\n\nexport default Histogram\n"],"sourceRoot":""}