{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/d3-drag/src/constant.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-ease/src/quad.js","../node_modules/d3-simple-slider/src/slider.js","Dashboard/Maps.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","constant","x","DragEvent","target","type","subject","id","active","y","dx","dy","dispatch","this","identifier","_","defaultFilter","on","ctrlKey","button","defaultContainer","parentNode","defaultSubject","defaultTouchable","navigator","maxTouchPoints","prototype","apply","arguments","src_drag","mousedownx","mousedowny","mousemoving","touchending","filter","container","touchable","gestures","listeners","Object","clickDistance2","drag","selection","mousedowned","touchstarted","touchmoved","touchended","style","gesture","beforestart","mouse","src_select","view","mousemoved","mouseupped","nodrag","noevent","clientX","clientY","touches","changedTouches","c","n","touch","clearTimeout","setTimeout","point","that","args","s","p","sublisteners","copy","p0","clickDistance","Math","sqrt","quadOut","t","UPDATE_DURATION","SLIDER_END_PADDING","KEYBOARD_NUMBER_STEPS","slider_top","right","bottom","left","translateX","translateY","slider_slider","orientation","scale","defaultValue","domain","width","height","displayValue","handle","step","tickValues","marks","tickFormat","ticks","displayFormat","fill","identityClamped","handleIndex","k","j","transformAlong","transformAcross","axisFunction","d3_axis_src","fillSelection","textSelection","slider","context","range","src","Date","d3_scale_src","clamp","map","selectAll","data","enter","append","attr","sliderSelection","sliderEnter","call","classed","pos","abs","alignedValue","invert","newValue","updateHandle","updateValue","computeDragNewValue","merge","select","handleEnter","adjustedValue","min","max","change","key","preventDefault","text","idx","remove","fadeTickText","indices","forEach","val","distances","each","indexOf","rect","shift","size","nodes","getBoundingClientRect","getAttribute","split","parseFloat","valueModStep","alignValue","index","notifyListener","animate","transition","ease","duration","toArray","sort","a","b","silentValue","default","Maps","getSlider","datewiseHash","svg","sliderName","color","addDays","days","date","valueOf","setDate","getDate","dateArr","startDate","stopDate","dateArray","currentDate","getDates","dateStr","d3","currDate","sliderFill","concat","plotConfirmedCases","format","casesTip","d3Tip","offset","html","cases","properties","name","deathsTip","casesColorScale","deathsColorScale","casesSvg","deathsSvg","projection","translate","path","getDatewiseHash","dhash","el","promises","window","appURL","Promise","all","then","values","_values","slicedToArray","deaths","casesDatewise","deathsDatewise","casesByID","Code","tip","includes","features","show","hide","ordinal","toConsumableArray","legendOrdinal","legend","legendColor","labelFormat","shape","shapePadding","cellFilter","label","react_default","createElement","_Aux","Row","Col","md","xl","Card","Body","className","React","Component"],"mappings":"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","file":"static/js/13.f12db6e5.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function () {\n  var value = this._.on.apply(this._, arguments);\n\n  return value === this._ ? this : value;\n};","import { dispatch } from \"d3-dispatch\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport nodrag, { yesdrag } from \"./nodrag.js\";\nimport noevent, { nopropagation } from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {\n    x: event.x,\n    y: event.y\n  } : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || \"ontouchstart\" in this;\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection.on(\"mousedown.drag\", mousedowned).filter(touchable).on(\"touchstart.drag\", touchstarted).on(\"touchmove.drag\", touchmoved).on(\"touchend.drag touchcancel.drag\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx,\n          dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, 500); // Ghost clicks are delayed!\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id),\n        s,\n        dx,\n        dy,\n        sublisteners = listeners.copy();\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n    return function gesture(type) {\n      var p0 = p,\n          n;\n\n      switch (type) {\n        case \"start\":\n          gestures[id] = gesture, n = active++;\n          break;\n\n        case \"end\":\n          delete gestures[id], --active;\n        // nobreak\n\n        case \"drag\":\n          p = point(container, id), n = active;\n          break;\n      }\n\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function (_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function (_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}","export function quadIn(t) {\n  return t * t;\n}\nexport function quadOut(t) {\n  return t * (2 - t);\n}\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}","import { min, max, scan } from 'd3-array';\nimport { axisTop, axisRight, axisBottom, axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { drag } from 'd3-drag';\nimport { easeQuadOut } from 'd3-ease';\nimport { scaleLinear, scaleTime } from 'd3-scale';\nimport { event, select } from 'd3-selection';\nimport 'd3-transition';\nvar UPDATE_DURATION = 200;\nvar SLIDER_END_PADDING = 8;\nvar KEYBOARD_NUMBER_STEPS = 100;\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\n\nfunction translateX(x) {\n  return 'translate(' + x + ',0)';\n}\n\nfunction translateY(y) {\n  return 'translate(0,' + y + ')';\n}\n\nfunction slider(orientation, scale) {\n  scale = typeof scale !== 'undefined' ? scale : null;\n  var value = [0];\n  var defaultValue = [0];\n  var domain = [0, 10];\n  var width = 100;\n  var height = 100;\n  var displayValue = true;\n  var handle = 'M-5.5,-5.5v10l6,5.5l6,-5.5v-10z';\n  var step = null;\n  var tickValues = null;\n  var marks = null;\n  var tickFormat = null;\n  var ticks = null;\n  var displayFormat = null;\n  var fill = null;\n  var listeners = dispatch('onchange', 'start', 'end', 'drag');\n  var selection = null;\n  var identityClamped = null;\n  var handleIndex = null;\n  var k = orientation === top || orientation === left ? -1 : 1;\n  var j = orientation === left || orientation === right ? -1 : 1;\n  var x = orientation === left || orientation === right ? 'y' : 'x';\n  var y = orientation === left || orientation === right ? 'x' : 'y';\n  var transformAlong = orientation === top || orientation === bottom ? translateX : translateY;\n  var transformAcross = orientation === top || orientation === bottom ? translateY : translateX;\n  var axisFunction = null;\n\n  switch (orientation) {\n    case top:\n      axisFunction = axisTop;\n      break;\n\n    case right:\n      axisFunction = axisRight;\n      break;\n\n    case bottom:\n      axisFunction = axisBottom;\n      break;\n\n    case left:\n      axisFunction = axisLeft;\n      break;\n  }\n\n  var handleSelection = null;\n  var fillSelection = null;\n  var textSelection = null;\n\n  if (scale) {\n    domain = [min(scale.domain()), max(scale.domain())];\n\n    if (orientation === top || orientation === bottom) {\n      width = max(scale.range()) - min(scale.range());\n    } else {\n      height = max(scale.range()) - min(scale.range());\n    }\n\n    scale = scale.clamp(true);\n  }\n\n  function slider(context) {\n    selection = context.selection ? context.selection() : context;\n\n    if (scale) {\n      scale = scale.range([min(scale.range()), min(scale.range()) + (orientation === top || orientation === bottom ? width : height)]);\n    } else {\n      scale = domain[0] instanceof Date ? scaleTime() : scaleLinear();\n      scale = scale.domain(domain).range(orientation === top || orientation === bottom ? [0, width] : [height, 0]).clamp(true);\n    }\n\n    identityClamped = scaleLinear().range(scale.range()).domain(scale.range()).clamp(true); // Ensure value is valid\n\n    value = value.map(function (d) {\n      return scaleLinear().range(domain).domain(domain).clamp(true)(d);\n    });\n    tickFormat = tickFormat || scale.tickFormat();\n    displayFormat = displayFormat || tickFormat || scale.tickFormat();\n    var axis = selection.selectAll('.axis').data([null]);\n    axis.enter().append('g').attr('transform', transformAcross(k * 7)).attr('class', 'axis');\n    var sliderSelection = selection.selectAll('.slider').data([null]);\n    var sliderEnter = sliderSelection.enter().append('g').attr('class', 'slider').attr('cursor', orientation === top || orientation === bottom ? 'ew-resize' : 'ns-resize').call(drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n    sliderEnter.append('line').attr('class', 'track').attr(x + '1', scale.range()[0] - j * SLIDER_END_PADDING).attr('stroke', '#bbb').attr('stroke-width', 6).attr('stroke-linecap', 'round');\n    sliderEnter.append('line').attr('class', 'track-inset').attr(x + '1', scale.range()[0] - j * SLIDER_END_PADDING).attr('stroke', '#eee').attr('stroke-width', 4).attr('stroke-linecap', 'round');\n\n    if (fill) {\n      sliderEnter.append('line').attr('class', 'track-fill').attr(x + '1', value.length === 1 ? scale.range()[0] - j * SLIDER_END_PADDING : scale(value[0])).attr('stroke', fill).attr('stroke-width', 4).attr('stroke-linecap', 'round');\n    }\n\n    sliderEnter.append('line').attr('class', 'track-overlay').attr(x + '1', scale.range()[0] - j * SLIDER_END_PADDING).attr('stroke', 'transparent').attr('stroke-width', 40).attr('stroke-linecap', 'round').merge(sliderSelection.select('.track-overlay'));\n    handleSelection = sliderEnter.selectAll('.parameter-value').data(value);\n    var handleEnter = handleSelection.enter().append('g').attr('class', 'parameter-value').attr('transform', function (d) {\n      return transformAlong(scale(d));\n    }).attr('font-family', 'sans-serif').attr('text-anchor', orientation === right ? 'start' : orientation === left ? 'end' : 'middle');\n    handleEnter.append('path').attr('transform', 'rotate(' + (orientation + 1) * 90 + ')').attr('d', handle).attr('class', 'handle').attr('aria-label', 'handle').attr('aria-valuemax', domain[1]).attr('aria-valuemin', domain[0]).attr('aria-valuenow', value).attr('aria-orientation', orientation === left || orientation === right ? 'vertical' : 'horizontal').attr('focusable', 'true').attr('tabindex', 0).attr('fill', 'white').attr('stroke', '#777').on('keydown', function (d, i) {\n      var change = step || (domain[1] - domain[0]) / KEYBOARD_NUMBER_STEPS; // TODO: Don't need to loop over value because we know which element needs to change\n\n      function newValue(adjustedValue) {\n        return value.map(function (d, j) {\n          if (value.length === 2) {\n            return j === i ? i === 0 ? Math.min(adjustedValue, alignedValue(value[1])) : Math.max(adjustedValue, alignedValue(value[0])) : d;\n          } else {\n            return j === i ? adjustedValue : d;\n          }\n        });\n      }\n\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowDown':\n          slider.value(newValue(+value[i] - change));\n          event.preventDefault();\n          break;\n\n        case 'PageDown':\n          slider.value(newValue(+value[i] - 2 * change));\n          event.preventDefault();\n          break;\n\n        case 'ArrowRight':\n        case 'ArrowUp':\n          slider.value(newValue(+value[i] + change));\n          event.preventDefault();\n          break;\n\n        case 'PageUp':\n          slider.value(newValue(+value[i] + 2 * change));\n          event.preventDefault();\n          break;\n\n        case 'Home':\n          slider.value(newValue(domain[0]));\n          event.preventDefault();\n          break;\n\n        case 'End':\n          slider.value(newValue(domain[1]));\n          event.preventDefault();\n          break;\n      }\n    });\n\n    if (displayValue) {\n      handleEnter.append('text').attr('font-size', 10) // TODO: Remove coupling to font-size in d3-axis\n      .attr(y, k * 27).attr('dy', orientation === top ? '0em' : orientation === bottom ? '.71em' : '.32em').attr('transform', value.length > 1 ? 'translate(0,0)' : null).text(function (d, idx) {\n        return tickFormat(value[idx]);\n      });\n    }\n\n    context.select('.track').attr(x + '2', scale.range()[1] + j * SLIDER_END_PADDING);\n    context.select('.track-inset').attr(x + '2', scale.range()[1] + j * SLIDER_END_PADDING);\n\n    if (fill) {\n      context.select('.track-fill').attr(x + '2', value.length === 1 ? scale(value[0]) : scale(value[1]));\n    }\n\n    context.select('.track-overlay').attr(x + '2', scale.range()[1] + j * SLIDER_END_PADDING);\n    context.select('.axis').call(axisFunction(scale).tickFormat(tickFormat).ticks(ticks).tickValues(tickValues)); // https://bl.ocks.org/mbostock/4323929\n\n    selection.select('.axis').select('.domain').remove();\n    context.select('.axis').attr('transform', transformAcross(k * 7));\n    context.selectAll('.axis text').attr('fill', '#aaa').attr(y, k * 20).attr('dy', orientation === top ? '0em' : orientation === bottom ? '.71em' : '.32em').attr('text-anchor', orientation === right ? 'start' : orientation === left ? 'end' : 'middle');\n    context.selectAll('.axis line').attr('stroke', '#aaa');\n    context.selectAll('.parameter-value').attr('transform', function (d) {\n      return transformAlong(scale(d));\n    });\n    fadeTickText();\n\n    function computeDragNewValue(pos) {\n      var adjustedValue = alignedValue(scale.invert(pos));\n      return value.map(function (d, i) {\n        if (value.length === 2) {\n          return i === handleIndex ? handleIndex === 0 ? Math.min(adjustedValue, alignedValue(value[1])) : Math.max(adjustedValue, alignedValue(value[0])) : d;\n        } else {\n          return i === handleIndex ? adjustedValue : d;\n        }\n      });\n    }\n\n    function dragstarted() {\n      select(this).classed('active', true);\n      var pos = identityClamped(orientation === bottom || orientation === top ? event.x : event.y); // Handle cases where both handles are at the same end of the slider\n\n      if (value[0] === domain[0] && value[1] === domain[0]) {\n        handleIndex = 1;\n      } else if (value[0] === domain[1] && value[1] === domain[1]) {\n        handleIndex = 0;\n      } else {\n        handleIndex = scan(value.map(function (d) {\n          return Math.abs(d - alignedValue(scale.invert(pos)));\n        }));\n      }\n\n      var newValue = value.map(function (d, i) {\n        return i === handleIndex ? alignedValue(scale.invert(pos)) : d;\n      });\n      updateHandle(newValue);\n      listeners.call('start', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);\n      updateValue(newValue, true);\n    }\n\n    function dragged() {\n      var pos = identityClamped(orientation === bottom || orientation === top ? event.x : event.y);\n      var newValue = computeDragNewValue(pos);\n      updateHandle(newValue);\n      listeners.call('drag', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);\n      updateValue(newValue, true);\n    }\n\n    function dragended() {\n      select(this).classed('active', false);\n      var pos = identityClamped(orientation === bottom || orientation === top ? event.x : event.y);\n      var newValue = computeDragNewValue(pos);\n      updateHandle(newValue);\n      listeners.call('end', sliderSelection, newValue.length === 1 ? newValue[0] : newValue);\n      updateValue(newValue, true);\n      handleIndex = null;\n    }\n\n    textSelection = selection.selectAll('.parameter-value text');\n    fillSelection = selection.select('.track-fill');\n  }\n\n  function fadeTickText() {\n    if (selection) {\n      if (displayValue) {\n        var indices = [];\n        value.forEach(function (val) {\n          var distances = [];\n          selection.selectAll('.axis .tick').each(function (d) {\n            distances.push(Math.abs(d - val));\n          });\n          indices.push(scan(distances));\n        });\n        selection.selectAll('.axis .tick text').attr('opacity', function (d, i) {\n          return ~indices.indexOf(i) ? 0 : 1;\n        });\n\n        if (textSelection && value.length > 1) {\n          var rect;\n          var shift;\n          var pos = [];\n          var size = [];\n          textSelection.nodes().forEach(function (d, i) {\n            rect = d.getBoundingClientRect();\n            shift = d.getAttribute('transform').split(/[()]/)[1].split(',')[x === 'x' ? 0 : 1];\n            pos[i] = rect[x] - parseFloat(shift);\n            size[i] = rect[x === 'x' ? 'width' : 'height'];\n          });\n\n          if (x === 'x') {\n            shift = Math.max(0, (pos[0] + size[0] - pos[1]) / 2);\n            textSelection.attr('transform', function (d, i) {\n              return 'translate(' + (i === 1 ? shift : -shift) + ',0)';\n            });\n          } else {\n            shift = Math.max(0, (pos[1] + size[1] - pos[0]) / 2);\n            textSelection.attr('transform', function (d, i) {\n              return 'translate(0,' + (i === 1 ? -shift : shift) + ')';\n            });\n          }\n        }\n      }\n    }\n  }\n\n  function alignedValue(newValue) {\n    if (step) {\n      var valueModStep = (newValue - domain[0]) % step;\n      var alignValue = newValue - valueModStep;\n\n      if (valueModStep * 2 > step) {\n        alignValue += step;\n      }\n\n      return newValue instanceof Date ? new Date(alignValue) : alignValue;\n    }\n\n    if (marks) {\n      var index = scan(marks.map(function (d) {\n        return Math.abs(newValue - d);\n      }));\n      return marks[index];\n    }\n\n    return newValue;\n  }\n\n  function updateValue(newValue, notifyListener) {\n    if (value[0] !== newValue[0] || value.length > 1 && value[1] !== newValue[1]) {\n      value = newValue;\n\n      if (notifyListener) {\n        listeners.call('onchange', slider, newValue.length === 1 ? newValue[0] : newValue);\n      }\n\n      fadeTickText();\n    }\n  }\n\n  function updateHandle(newValue, animate) {\n    if (selection) {\n      animate = typeof animate !== 'undefined' ? animate : false;\n\n      if (animate) {\n        selection.selectAll('.parameter-value').data(newValue).transition().ease(easeQuadOut).duration(UPDATE_DURATION).attr('transform', function (d) {\n          return transformAlong(scale(d));\n        }).select('.handle').attr('aria-valuenow', function (d) {\n          return d;\n        });\n\n        if (fill) {\n          fillSelection.transition().ease(easeQuadOut).duration(UPDATE_DURATION).attr(x + '1', value.length === 1 ? scale.range()[0] - k * SLIDER_END_PADDING : scale(newValue[0])).attr(x + '2', value.length === 1 ? scale(newValue[0]) : scale(newValue[1]));\n        }\n      } else {\n        selection.selectAll('.parameter-value').data(newValue).attr('transform', function (d) {\n          return transformAlong(scale(d));\n        }).select('.handle').attr('aria-valuenow', function (d) {\n          return d;\n        });\n\n        if (fill) {\n          fillSelection.attr(x + '1', value.length === 1 ? scale.range()[0] - k * SLIDER_END_PADDING : scale(newValue[0])).attr(x + '2', value.length === 1 ? scale(newValue[0]) : scale(newValue[1]));\n        }\n      }\n\n      if (displayValue) {\n        textSelection.text(function (d, idx) {\n          return displayFormat(newValue[idx]);\n        });\n      }\n    }\n  }\n\n  slider.min = function (_) {\n    if (!arguments.length) return domain[0];\n    domain[0] = _;\n    return slider;\n  };\n\n  slider.max = function (_) {\n    if (!arguments.length) return domain[1];\n    domain[1] = _;\n    return slider;\n  };\n\n  slider.domain = function (_) {\n    if (!arguments.length) return domain;\n    domain = _;\n    return slider;\n  };\n\n  slider.width = function (_) {\n    if (!arguments.length) return width;\n    width = _;\n    return slider;\n  };\n\n  slider.height = function (_) {\n    if (!arguments.length) return height;\n    height = _;\n    return slider;\n  };\n\n  slider.tickFormat = function (_) {\n    if (!arguments.length) return tickFormat;\n    tickFormat = _;\n    return slider;\n  };\n\n  slider.displayFormat = function (_) {\n    if (!arguments.length) return displayFormat;\n    displayFormat = _;\n    return slider;\n  };\n\n  slider.ticks = function (_) {\n    if (!arguments.length) return ticks;\n    ticks = _;\n    return slider;\n  };\n\n  slider.value = function (_) {\n    if (!arguments.length) {\n      if (value.length === 1) {\n        return value[0];\n      }\n\n      return value;\n    }\n\n    var toArray = Array.isArray(_) ? _ : [_];\n    toArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (scale) {\n      var pos = toArray.map(scale).map(identityClamped);\n      var newValue = pos.map(scale.invert).map(alignedValue);\n      updateHandle(newValue, false);\n      updateValue(newValue, false);\n    } else {\n      value = toArray;\n    }\n\n    return slider;\n  };\n\n  slider.silentValue = function (_) {\n    if (!arguments.length) {\n      if (value.length === 1) {\n        return value[0];\n      }\n\n      return value;\n    }\n\n    var toArray = Array.isArray(_) ? _ : [_];\n    toArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (scale) {\n      var pos = toArray.map(scale).map(identityClamped);\n      var newValue = pos.map(scale.invert).map(alignedValue);\n      updateHandle(newValue, false);\n      updateValue(newValue, false);\n    } else {\n      value = toArray;\n    }\n\n    return slider;\n  };\n\n  slider.default = function (_) {\n    if (!arguments.length) {\n      if (defaultValue.length === 1) {\n        return defaultValue[0];\n      }\n\n      return defaultValue;\n    }\n\n    var toArray = Array.isArray(_) ? _ : [_];\n    toArray.sort(function (a, b) {\n      return a - b;\n    });\n    defaultValue = toArray;\n    value = toArray;\n    return slider;\n  };\n\n  slider.step = function (_) {\n    if (!arguments.length) return step;\n    step = _;\n    return slider;\n  };\n\n  slider.tickValues = function (_) {\n    if (!arguments.length) return tickValues;\n    tickValues = _;\n    return slider;\n  };\n\n  slider.marks = function (_) {\n    if (!arguments.length) return marks;\n    marks = _;\n    return slider;\n  };\n\n  slider.handle = function (_) {\n    if (!arguments.length) return handle;\n    handle = _;\n    return slider;\n  };\n\n  slider.displayValue = function (_) {\n    if (!arguments.length) return displayValue;\n    displayValue = _;\n    return slider;\n  };\n\n  slider.fill = function (_) {\n    if (!arguments.length) return fill;\n    fill = _;\n    return slider;\n  };\n\n  slider.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? slider : value;\n  };\n\n  return slider;\n}\n\nexport function sliderHorizontal(scale) {\n  return slider(bottom, scale);\n}\nexport function sliderVertical(scale) {\n  return slider(left, scale);\n}\nexport function sliderTop(scale) {\n  return slider(top, scale);\n}\nexport function sliderRight(scale) {\n  return slider(right, scale);\n}\nexport function sliderBottom(scale) {\n  return slider(bottom, scale);\n}\nexport function sliderLeft(scale) {\n  return slider(left, scale);\n}","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport * as d3 from 'd3'\nimport d3Tip from \"d3-tip\"\nimport { sliderBottom } from 'd3-simple-slider'\n//import topojson from 'topojson'\nimport legend from 'd3-svg-legend'\n\nimport Aux from \"../hoc/_Aux\";\n\nclass Maps extends React.Component {\n    componentDidMount() {\n        let getSlider = (data, datewiseHash, svg, sliderName, identifier, color) => {\n            // Dates between two dates\n            Date.prototype.addDays = function (days) {\n                let date = new Date(this.valueOf())\n                date.setDate(date.getDate() + days)\n                return date\n            }\n\n            let getDates = (startDate, stopDate) => {\n                let dateArray = new Array()\n                let currentDate = startDate\n                while (currentDate <= stopDate) {\n                    dateArray.push(new Date(currentDate))\n                    currentDate = currentDate.addDays(1)\n                }\n                return dateArray\n            }\n\n            let startDate = new Date(2019, 11, 31)\n            let endDate = new Date(2020, 4, 17)\n            let dateArr = getDates(startDate, endDate)\n\n            let dateStr = (d) => {\n                return d3.timeFormat('%b %-d, %Y')(d)\n            }\n\n            // Initialize CurrDate\n            let currDate = d3.max(dateArr)\n\n            // Fill\n            let sliderFill = sliderBottom()\n                .min(d3.min(dateArr))\n                .max(d3.max(dateArr))\n                .width(300)\n                .tickFormat(d3.timeFormat('%b %-d'))\n                .ticks(3)\n                .default(d3.max(dateArr))\n                .fill('#2196f3')\n                .on('onchange', val => {\n                    currDate = val\n                    d3.select(`p#${sliderName}-value-fill`).text(dateStr(currDate))\n                    plotConfirmedCases(data, datewiseHash, dateStr(currDate), svg, identifier, color)\n                })\n            let gFill = d3\n                .select(`div#${sliderName}-slider-fill`)\n                .append('svg')\n                .attr('width', 500)\n                .attr('height', 100)\n                .append('g')\n                .attr('transform', 'translate(30,30)')\n\n            gFill.call(sliderFill)\n\n            d3.select(`p#${sliderName}-value-fill`).text(d3.timeFormat('%b %-d, %Y')(sliderFill.value()))\n\n            // initial call\n            plotConfirmedCases(data, datewiseHash, dateStr(currDate), svg, identifier, color)\n\n        }\n\n        let format = d3.format(\",\")\n\n        // Set SVGs and tooltips\n        let casesTip = d3Tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function (d) {\n                let cases = (d.cases == 0 || d.cases) ? format(d.cases) : \"Data unavailable\"\n                return \"<strong>Country: </strong><span className='details'>\"\n                    + d.properties.name\n                    + \"<br></span>\"\n                    + \"<strong>Cases: </strong><span className='details'>\"\n                    + cases\n                    + \"</span>\"\n            })\n\n        let deathsTip = d3Tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function (d) {\n                let cases = (d.cases == 0 || d.cases) ? format(d.cases) : \"Data unavailable\"\n                return \"<strong>Country: </strong><span className='details'>\"\n                    + d.properties.name\n                    + \"<br></span>\"\n                    + \"<strong>Cases: </strong><span className='details'>\"\n                    + cases\n                    + \"</span>\"\n            })\n\n        let margin = { top: 0, right: 0, bottom: 0, left: 0 },\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom\n\n        let casesColorScale = d3.scaleThreshold()\n            .domain([10, 50, 100, 500, 10000, 100000, 500000, 1000000, 5000000])\n            .range([\"#FF9B54\", \"#E6854A\", \"#CD6F3F\", \"#B45935\", \"#9A422A\", \"#812C20\", \"#681615\", \"#4F000B\"])\n        let deathsColorScale = d3.scaleThreshold()\n            .domain([5, 10, 50, 100, 500, 10000, 25000])\n            .range([\"#FEEBE2\", \"#FCC5C0\", \"#F99FB5\", \"#F668A1\", \"#DF5597\", \"#B0447E\", \"#7C3B77\"])\n\n        let casesSvg = d3.select(\".cases-map\")\n            .append(\"svg\")\n            .attr(\"width\", '100%')\n            .attr(\"height\", height)\n            .append('g')\n            .attr('class', 'map')\n\n        let deathsSvg = d3.select(\".deaths-map\")\n            .append(\"svg\")\n            .attr(\"width\", '100%')\n            .attr(\"height\", height)\n            .append('g')\n            .attr('class', 'map')\n\n        let projection = d3.geoMercator()\n            .scale(130)\n            .translate([width / 2, height / 1.5])\n\n        let path = d3.geoPath().projection(projection)\n\n        casesSvg.call(casesTip)\n        deathsSvg.call(deathsTip)\n\n\n\n        // Loading data\n        let getDatewiseHash = (cases) => {\n            let dhash = {}\n            cases.forEach((el) => {\n                dhash[el['Date']] = dhash[el['Date']] || []\n                dhash[el['Date']].push(el)\n            })\n            return dhash\n        }\n\n        let promises = [\n            d3.json(`${window.appURL}/world.geojson`),\n            d3.csv(`${window.appURL}/G3_total-cases-covid-19.csv`),\n            d3.csv(`${window.appURL}/G4_total-deaths-covid-19.csv`)\n        ]\n\n        Promise.all(promises).then((values) => {\n            let [data, cases, deaths] = values\n            let casesDatewise = getDatewiseHash(cases)\n            let deathsDatewise = getDatewiseHash(deaths)\n            let casesIdentifier = 'cases'\n            let deathsIdentifier = 'Total confirmed deaths due to COVID-19 (deaths)'\n            getSlider(data, casesDatewise, casesSvg, 's1', casesIdentifier, casesColorScale)\n            getSlider(data, deathsDatewise, deathsSvg, 's2', deathsIdentifier, deathsColorScale)\n        })\n\n        let plotConfirmedCases = (data, datewiseHash, currDate, svg, identifier, color) => {\n            let casesByID = {}\n            datewiseHash[currDate].forEach((d) => {\n                casesByID[d.Code] = +d[identifier]\n            })\n\n            let tip = identifier.includes('deaths') ? deathsTip : casesTip\n\n            data.features.forEach((d) => { d.cases = casesByID[d.id] })\n\n            svg.append(\"g\")\n                .attr(\"class\", \"countries\")\n                .selectAll(\"path\")\n                .data(data.features)\n                .enter().append(\"path\")\n                .attr(\"d\", path)\n                .style(\"fill\", (d) => { return color(casesByID[d.id]); })\n                .style('stroke', 'white')\n                .style('stroke-width', 1.5)\n                .style(\"opacity\", 0.8)\n                // tooltips\n                .style(\"stroke\", \"white\")\n                .style('stroke-width', 0.3)\n                .on('mouseover', function (d) {\n                    tip.show(d, this)\n\n                    d3.select(this)\n                        .style(\"opacity\", 1)\n                        .style(\"stroke\", \"white\")\n                        .style(\"stroke-width\", 3)\n                })\n                .on('mouseout', function (d) {\n                    tip.hide(d, this)\n\n                    d3.select(this)\n                        .style(\"opacity\", 0.8)\n                        .style(\"stroke\", \"white\")\n                        .style(\"stroke-width\", 0.3)\n                })\n\n            /*\n            svg.append(\"path\")\n                .datum(topojson.mesh(data.features, (a, b) => { return a.id !== b.id; }))\n                .attr(\"class\", \"names\")\n                .attr(\"d\", path)\n           */\n            let ordinal = d3.scaleOrdinal()\n                .domain([\"No Data\", ...color.domain()])\n                .range([\"#000000\", ...color.range()])\n            svg.append(\"g\")\n                .attr(\"class\", \"legendOrdinal\")\n                .attr(\"transform\", \"translate(20,350)\");\n\n            let legendOrdinal = legend.legendColor()\n                .labelFormat(d3.format(\",.2r\"))\n                //d3 symbol creates a path-string, for example\n                //\"M0,-8.059274488676564L9.306048591020996,\n                //8.059274488676564 -9.306048591020996,8.059274488676564Z\"\n                .shape(\"path\", d3.symbol().type(d3.symbolSquare).size(150)())\n                .shapePadding(10)\n                //use cellFilter to hide the \"e\" cell\n                .cellFilter(function (d) { return d.label !== \"e\" })\n                .scale(ordinal)\n            svg.select(\".legendOrdinal\")\n                .call(legendOrdinal);\n        }\n\n    }\n    render() {\n        return (\n            <Aux>\n                <Row>\n                    <Col md={12} xl={12}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>\n                                    What is the total number of confirmed cases?\n                                </h6>\n                                <p>\n                                    The number of confirmed cases is lower than the number of total cases. The main reason for this is limited\n                                    testing.\n                                </p>\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-sm-2\">\n                                        <p id=\"s1-value-fill\"></p>\n                                    </div>\n                                </div>\n\n                                <div className=\"cases-map\">\n                                </div>\n                                <div className=\"col-sm\">\n                                    <div id=\"s1-slider-fill\"></div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={12} xl={12}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>\n                                   What is the total number of confirmed deaths? \n                                </h6>\n                                <p>\n                                    Limited testing and challenges in the attribution of the cause of death means that the number of confirmed deaths\n                                    may not be an accurate count of the true number of deaths from COVID-19.\n                                </p>\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-sm-2\">\n                                        <p id=\"s2-value-fill\"></p>\n                                    </div>\n                                </div>\n\n                                <div className=\"deaths-map\">\n                                </div>\n                                <div className=\"col-sm\">\n                                    <div id=\"s2-slider-fill\"></div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default Maps;"],"sourceRoot":""}