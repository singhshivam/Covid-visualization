{"version":3,"sources":["routes.js","store/constant.js","App/layout/AdminLayout/Navigation/NavLogo/index.js","App/layout/AdminLayout/Navigation/NavContent/NavIcon/index.js","App/layout/AdminLayout/Navigation/NavContent/NavBadge/index.js","App/layout/AdminLayout/Navigation/NavContent/NavItem/index.js","App/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js","App/layout/AdminLayout/Navigation/NavContent/NavGroup/index.js","App/layout/AdminLayout/Navigation/NavContent/index.js","App/layout/AdminLayout/Navigation/OutsideClick/index.js","menu-items.js","App/layout/AdminLayout/Navigation/index.js","App/layout/AdminLayout/NavBar/index.js","App/layout/AdminLayout/index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","window","jQuery","$","MultiLine","React","lazy","Promise","all","e","then","bind","Maps","TSne","RaceChart","Gantt","routes","path","exact","name","component","DEMO","BLANK_LINK","navLogo","props","toggleClass","collapseMenu","concat","Object","toConsumableArray","react_default","a","createElement","_Aux","className","href","join","id","onClick","onToggleNavigation","navIcon","navIcons","items","icon","navBadge","navBadges","badge","badgeClass","type","title","NavItem","itemTitle","this","item","subContent","itemTarget","target","external","url","rel","NavIcon","NavBadge","layout","NavLink","to","mainContent","onItemLeave","windowWidth","classes","onItemClick","Component","withRouter","connect","state","dispatch","actionTypes","windowSize","NavCollapse","_this","document","location","pathname","toString","split","findIndex","collapse","onCollapseToggle","_this2","_this$props","isOpen","isTrigger","navItems","children","collapses","keys","map","NavContent_NavCollapse","key","NavContent_NavItem","navLinkClass","navItemClass","onMouseLeave","onNavCollapseLeave","onMouseEnter","menu","navGroup","group","groups","NavContent","scrollWidth","prevDisable","nextDisable","scrollPrevHandler","wrapperWidth","getElementById","clientWidth","setState","scrollNextHandler","contentWidth","navigation","NavGroup","prevClass","nextClass","onNavContentLeave","style","marginLeft","lib_default","OutsideClick","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setWrapperRef","assertThisInitialized","handleOutsideClick","addEventListener","removeEventListener","node","wrapperRef","event","contains","ref","menu_items","Navigation","resize","onChangeLayout","navClass","preLayout","layoutType","navBackColor","navBrandColor","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navBackImage","navIconColor","navFixedLayout","navListTitleHide","body","classList","add","backgroundImage","layout6Background","backgroundSize","layout6BackSize","remove","rtlLayout","boxLayout","navContent","NavLogo","Navigation_NavContent","Navigation_OutsideClick","NavBar","headerClass","headerBackColor","headerFixedLayout","AdminLayout","fullScreenExitHandler","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","onFullScreenExit","onComponentWillMount","route","index","Route","render","dist_default","enabled","isFullScreen","AdminLayout_Navigation","AdminLayout_NavBar","mobileOutClickHandler","react","fallback","Loader","Switch","Redirect","from","defaultPath","configBlock"],"mappings":"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","file":"static/js/9.780700b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\nconst MultiLine = React.lazy(() => import('./Dashboard/MultiLine'));\r\nconst Maps = React.lazy(() => import('./Dashboard/Maps'));\r\nconst TSne = React.lazy(() => import('./Dashboard/TSne'));\r\nconst RaceChart = React.lazy(() => import('./Dashboard/RaceChart'));\r\nconst Gantt = React.lazy(() => import('./Dashboard/Gantt'));\r\nconst Intro = React.lazy(() => import('./Dashboard/Intro'));\r\n\r\nconst routes = [\r\n    { path: '/intro', exact: true, name: 'Introduction', component: Intro },\r\n    { path: '/multi-lines', exact: true, name: 'Multi-lines Visualization', component: MultiLine },\r\n    { path: '/maps', exact: true, name: 'Map Visualization', component: Maps },\r\n    { path: '/t-sne', exact: true, name: 'T-SNE Visualization', component: TSne },\r\n    { path: '/race-chart', exact: true, name: 'Race Charts', component: RaceChart },\r\n    { path: '/gantt', exact: true, name: 'Gantt Charts', component: Gantt },\r\n];\r\n\r\nexport default routes;","const DEMO = {\r\n    BLANK_LINK: \"#!\",\r\n};\r\n\r\nexport default DEMO;","import React from 'react';\r\nimport DEMO  from './../../../../../store/constant';\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\n\r\nconst navLogo = (props) => {\r\n    let toggleClass = ['mobile-menu'];\r\n    if (props.collapseMenu) {\r\n        toggleClass = [...toggleClass, 'on'];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"navbar-brand header-logo\">\r\n                 <a href={DEMO.BLANK_LINK} className=\"b-brand\">\r\n                    <span className=\"b-title\">Covid-19</span>\r\n                 </a>\r\n                <a href={DEMO.BLANK_LINK} className={toggleClass.join(' ')} id=\"mobile-collapse\" onClick={props.onToggleNavigation}><span /></a>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navLogo;\r\n","import React from 'react';\r\n\r\nconst navIcon = (props) => {\r\n    let navIcons = false;\r\n    if (props.items.icon) {\r\n        navIcons = <span className=\"pcoded-micon\"><i className={props.items.icon} /></span>;\r\n    }\r\n    return navIcons;\r\n};\r\n\r\nexport default navIcon;","import React from 'react';\r\n\r\nconst navBadge = (props) => {\r\n    let navBadges = false;\r\n    if (props.items.badge) {\r\n        const badgeClass = ['label', 'pcoded-badge', props.items.badge.type];\r\n\r\n        navBadges = (\r\n            <span className={badgeClass.join(' ')}>\r\n                {props.items.badge.title}\r\n            </span>\r\n        );\r\n    }\r\n    return navBadges;\r\n};\r\n\r\nexport default navBadge;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavIcon from \"./../NavIcon\";\r\nimport NavBadge from \"./../NavBadge\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\n\r\nclass NavItem extends Component {\r\n\r\n    render() {\r\n        let itemTitle = this.props.item.title;\r\n        if (this.props.item.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.item.title}</span>;\r\n        }\r\n\r\n        let itemTarget = '';\r\n        if (this.props.item.target) {\r\n            itemTarget = '_blank';\r\n        }\r\n\r\n        let subContent;\r\n        if(this.props.item.external) {\r\n            subContent = (\r\n                <a href={this.props.item.url} target='_blank' rel='noopener noreferrer'>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </a>\r\n            );\r\n        } else {\r\n            subContent = (\r\n                <NavLink to={this.props.item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </NavLink>\r\n            );\r\n        }\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li onClick={this.props.onItemLeave}>{subContent}</li>\r\n            );\r\n        } else {\r\n            if (this.props.windowWidth < 992) {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes} onClick={this.props.onItemClick}>{subContent}</li>\r\n                );\r\n            } else {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes}>{subContent}</li>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onItemClick: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onItemLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavItem)));\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\nimport NavIcon from './../NavIcon';\r\nimport NavBadge from './../NavBadge';\r\nimport NavItem from \"../NavItem\";\r\nimport LoopNavCollapse from './index';\r\n\r\nclass NavCollapse extends Component {\r\n\r\n    componentDidMount() {\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOpen, isTrigger} = this.props;\r\n\r\n        let navItems = '';\r\n        if (this.props.collapse.children) {\r\n            const collapses = this.props.collapse.children;\r\n            navItems = Object.keys(collapses).map(item => {\r\n                item = collapses[item];\r\n                switch (item.type) {\r\n                    case 'collapse':\r\n                        return <LoopNavCollapse key={item.id} collapse={item} type=\"sub\" />;\r\n                    case 'item':\r\n                        return <NavItem layout={this.props.layout} key={item.id} item={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        let itemTitle = this.props.collapse.title;\r\n        if (this.props.collapse.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.collapse.title}</span>;\r\n        }\r\n\r\n        let navLinkClass = ['nav-link'];\r\n\r\n        let navItemClass = ['nav-item', 'pcoded-hasmenu'];\r\n        const openIndex = isOpen.findIndex(id => id === this.props.collapse.id);\r\n        if (openIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\r\n        if (triggerIndex > -1) {\r\n            navItemClass = [...navItemClass, 'pcoded-trigger'];\r\n        }\r\n\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const subContent = (\r\n            <Aux>\r\n                <a href={DEMO.BLANK_LINK} className={navLinkClass.join(' ')} onClick={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    <NavIcon items={this.props.collapse} />\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.collapse} />\r\n                </a>\r\n                <ul className=\"pcoded-submenu\">\r\n                    {navItems}\r\n                </ul>\r\n            </Aux>\r\n        );\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')} onMouseLeave={() => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type)} onMouseEnter={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        isOpen: state.isOpen,\r\n        isTrigger: state.isTrigger\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCollapseToggle: (id, type) => dispatch({type: actionTypes.COLLAPSE_TOGGLE, menu: {id: id, type: type}}),\r\n        onNavCollapseLeave: (id, type) => dispatch({type: actionTypes.NAV_COLLAPSE_LEAVE, menu: {id: id, type: type}})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));\r\n","import React from 'react';\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavCollapse from './../NavCollapse';\r\nimport NavItem from './../NavItem';\r\n\r\nconst navGroup = (props) => {\r\n    let navItems = '';\r\n    if (props.group.children) {\r\n        const groups = props.group.children;\r\n        navItems = Object.keys(groups).map(item => {\r\n            item = groups[item];\r\n            switch (item.type) {\r\n                case 'collapse':\r\n                    return <NavCollapse key={item.id} collapse={item} type=\"main\" />;\r\n                case 'item':\r\n                    return <NavItem layout={props.layout} key={item.id} item={item} />;\r\n                default:\r\n                    return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <li key={props.group.id} className=\"nav-item pcoded-menu-caption\"><label>{props.group.title}</label></li>\r\n            {navItems}\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navGroup;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport NavGroup from './NavGroup';\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass NavContent extends Component {\r\n    state = {\r\n        scrollWidth: 0,\r\n        prevDisable: true,\r\n        nextDisable: false\r\n    };\r\n\r\n    scrollPrevHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth - wrapperWidth;\r\n        if(scrollWidth < 0) {\r\n            this.setState({scrollWidth: 0, prevDisable: true, nextDisable: false});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    scrollNextHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n        const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth + (wrapperWidth - 80);\r\n        if (scrollWidth > (contentWidth - wrapperWidth)) {\r\n            scrollWidth = contentWidth - wrapperWidth + 80;\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false, nextDisable: true});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const navItems = this.props.navigation.map(item => {\r\n                switch (item.type) {\r\n                    case 'group':\r\n                        return <NavGroup layout={this.props.layout} key={item.id} group={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n        );\r\n\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            let prevClass = ['sidenav-horizontal-prev'];\r\n            if (this.state.prevDisable) {\r\n                prevClass = [...prevClass, 'disabled'];\r\n            }\r\n            let nextClass = ['sidenav-horizontal-next'];\r\n            if (this.state.nextDisable) {\r\n                nextClass = [...nextClass, 'disabled'];\r\n            }\r\n\r\n            mainContent = (\r\n                <div className=\"navbar-content sidenav-horizontal\" id=\"layout-sidenav\">\r\n                    <a href={DEMO.BLANK_LINK} className={prevClass.join(' ')} onClick={this.scrollPrevHandler}><span/></a>\r\n                    <div id=\"sidenav-wrapper\" className=\"sidenav-horizontal-wrapper\">\r\n                        <ul id=\"sidenav-horizontal\" className=\"nav pcoded-inner-navbar sidenav-inner\" onMouseLeave={this.props.onNavContentLeave} style={{marginLeft: '-'+this.state.scrollWidth+'px'}}>\r\n                            {navItems}\r\n                        </ul>\r\n                    </div>\r\n                    <a href={DEMO.BLANK_LINK} className={nextClass.join(' ')} onClick={this.scrollNextHandler}><span/></a>\r\n                </div>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <div className=\"navbar-content datta-scroll\">\r\n                    <PerfectScrollbar>\r\n                        <ul className=\"nav pcoded-inner-navbar\">\r\n                            {navItems}\r\n                        </ul>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onNavContentLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavContent)));\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass OutsideClick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    /**\r\n     * close menu if clicked on outside of element\r\n     */\r\n    handleOutsideClick(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n                this.props.onToggleNavigation();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"nav-outside\" ref={this.setWrapperRef}>{this.props.children}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(OutsideClick));","export default {\r\n    items: [\r\n        {\r\n            id: 'graphs',\r\n            title: 'Graphs',\r\n            type: 'group',\r\n            icon: 'icon-navigation',\r\n            children: [\r\n                {\r\n                    id: 'intro',\r\n                    title: 'Introduction',\r\n                    type: 'item',\r\n                    url: '/intro',\r\n                    icon: 'feather icon-book',\r\n                },\r\n                {\r\n                    id: 'race-bar',\r\n                    title: 'Race Bar',\r\n                    type: 'item',\r\n                    url: '/race-chart',\r\n                    icon: 'feather icon-bar-chart',\r\n                },\r\n                {\r\n                    id: 'multi-line',\r\n                    title: 'Multi-lines',\r\n                    type: 'item',\r\n                    url: '/multi-lines',\r\n                    icon: 'feather icon-trending-up',\r\n                },\r\n                {\r\n                    id: 'maps',\r\n                    title: 'Maps',\r\n                    type: 'item',\r\n                    url: '/maps',\r\n                    icon: 'feather icon-map',\r\n                },\r\n                {\r\n                    id: 'tsne',\r\n                    title: 'T-SNE',\r\n                    type: 'item',\r\n                    url: '/t-sne',\r\n                    icon: 'feather icon-layers',\r\n                },\r\n                {\r\n                    id: 'gantt',\r\n                    title: 'Gantt Chart',\r\n                    type: 'item',\r\n                    url: '/gantt',\r\n                    icon: 'feather icon-list',\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavLogo from './NavLogo';\r\nimport NavContent from './NavContent';\r\nimport OutsideClick from './OutsideClick';\r\nimport Aux from './../../../../hoc/_Aux'\r\nimport * as actionTypes from './../../../../store/actions';\r\nimport navigation from '../../../../menu-items';\r\n\r\nclass Navigation extends Component {\r\n\r\n    resize = () => {\r\n        const contentWidth = document.getElementById('root').clientWidth;\r\n\r\n        if (this.props.layout === 'horizontal' && contentWidth < 992) {\r\n            this.props.onChangeLayout('vertical');\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resize();\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    render() {\r\n        let navClass = [\r\n            'pcoded-navbar',\r\n        ];\r\n\r\n        if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\r\n            navClass = [...navClass, this.props.preLayout];\r\n        } else {\r\n            navClass = [\r\n                ...navClass,\r\n                this.props.layoutType,\r\n                this.props.navBackColor,\r\n                this.props.navBrandColor,\r\n                'drp-icon-'+this.props.navDropdownIcon,\r\n                'menu-item-icon-'+this.props.navListIcon,\r\n                this.props.navActiveListColor,\r\n                this.props.navListTitleColor,\r\n            ];\r\n\r\n            if (this.props.layout === 'horizontal') {\r\n                navClass = [...navClass, 'theme-horizontal'];\r\n            }\r\n\r\n            if (this.props.navBackImage) {\r\n                navClass = [...navClass, this.props.navBackImage];\r\n            }\r\n\r\n            if (this.props.navIconColor) {\r\n                navClass = [...navClass, 'icon-colored'];\r\n            }\r\n\r\n            if (!this.props.navFixedLayout) {\r\n                navClass = [...navClass, 'menupos-static'];\r\n            }\r\n\r\n            if (this.props.navListTitleHide) {\r\n                navClass = [...navClass, 'caption-hide'];\r\n            }\r\n        }\r\n\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            navClass = [...navClass, 'mob-open'];\r\n        } else if (this.props.collapseMenu) {\r\n            navClass = [...navClass, 'navbar-collapsed'];\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-6') {\r\n            document.body.classList.add('layout-6');\r\n            document.body.style.backgroundImage = this.props.layout6Background;\r\n            document.body.style.backgroundSize = this.props.layout6BackSize;\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-8') {\r\n            document.body.classList.add('layout-8');\r\n        }\r\n\r\n        if (this.props.layoutType === 'dark') {\r\n            document.body.classList.add('datta-dark');\r\n        } else {\r\n            document.body.classList.remove('datta-dark');\r\n        }\r\n\r\n        if (this.props.rtlLayout) {\r\n            document.body.classList.add('datta-rtl');\r\n        } else {\r\n            document.body.classList.remove('datta-rtl');\r\n        }\r\n\r\n        if (this.props.boxLayout) {\r\n            document.body.classList.add('container');\r\n            document.body.classList.add('box-layout');\r\n        } else {\r\n            document.body.classList.remove('container');\r\n            document.body.classList.remove('box-layout');\r\n        }\r\n\r\n        let navContent = (\r\n            <div className=\"navbar-wrapper\">\r\n                <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                <NavContent navigation={navigation.items} />\r\n            </div>\r\n        );\r\n        if (this.props.windowWidth < 992) {\r\n            navContent = (\r\n                <OutsideClick>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                        <NavContent navigation={navigation.items} />\r\n                    </div>\r\n                </OutsideClick>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <nav className={navClass.join(' ')}>\r\n                    {navContent}\r\n                </nav>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        preLayout: state.preLayout,\r\n        collapseMenu: state.collapseMenu,\r\n        layoutType: state.layoutType,\r\n        navBackColor: state.navBackColor,\r\n        navBackImage: state.navBackImage,\r\n        navIconColor: state.navIconColor,\r\n        navBrandColor: state.navBrandColor,\r\n        layout6Background: state.layout6Background,\r\n        layout6BackSize: state.layout6BackSize,\r\n        rtlLayout: state.rtlLayout,\r\n        navFixedLayout: state.navFixedLayout,\r\n        boxLayout: state.boxLayout,\r\n        navDropdownIcon: state.navDropdownIcon,\r\n        navListIcon: state.navListIcon,\r\n        navActiveListColor: state.navActiveListColor,\r\n        navListTitleColor: state.navListTitleColor,\r\n        navListTitleHide: state.navListTitleHide\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onChangeLayout: (layout) => dispatch({type: actionTypes.CHANGE_LAYOUT, layout: layout}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from \"../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../store/actions\";\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        let headerClass = ['navbar', 'pcoded-header', 'navbar-expand-lg', this.props.headerBackColor];\r\n        if (this.props.headerFixedLayout) {\r\n            headerClass = [...headerClass, 'headerpos-fixed'];\r\n        }\r\n\r\n        let toggleClass = ['mobile-menu'];\r\n        if (this.props.collapseMenu) {\r\n            toggleClass = [...toggleClass, 'on'];\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <header className={headerClass.join(' ')}>\r\n                    <div className=\"m-header\">\r\n                        <a className={toggleClass.join(' ')} id=\"mobile-collapse1\" href={DEMO.BLANK_LINK} onClick={this.props.onToggleNavigation}><span/></a>\r\n                        <a href={DEMO.BLANK_LINK} className=\"b-brand\">\r\n                            <div className=\"b-bg\">\r\n                                <i className=\"feather icon-trending-up\"/>\r\n                            </div>\r\n                            <span className=\"b-title\">Covid-19 Visualization</span>\r\n                        </a>\r\n                    </div>\r\n                    <a className=\"mobile-menu\" id=\"mobile-header\" href={DEMO.BLANK_LINK}><i className=\"feather icon-more-horizontal\"/></a>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                    </div>\r\n                </header>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rtlLayout: state.rtlLayout,\r\n        headerBackColor: state.headerBackColor,\r\n        headerFixedLayout: state.headerFixedLayout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (NavBar);\r\n","import React, { Component, Suspense } from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Navigation from './Navigation';\r\nimport NavBar from './NavBar';\r\nimport Loader from \"../Loader\";\r\nimport routes from \"../../../routes\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport './app.scss';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n    fullScreenExitHandler = () => {\r\n        if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\r\n            this.props.onFullScreenExit();\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== 'horizontal') {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    mobileOutClickHandler() {\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* full screen exit call */\r\n        document.addEventListener('fullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('webkitfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('mozfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('MSFullscreenChange', this.fullScreenExitHandler);\r\n\r\n        const menu = routes.map((route, index) => {\r\n            return (route.component) ? (\r\n                <Route\r\n                    key={index}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={props => (\r\n                        <route.component {...props} />\r\n                    )} />\r\n            ) : (null);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Fullscreen enabled={this.props.isFullScreen}>\r\n                    <Navigation />\r\n                    <NavBar />\r\n                    <div className=\"pcoded-main-container\" onClick={() => this.mobileOutClickHandler}>\r\n                        <div className=\"pcoded-wrapper\">\r\n                            <div className=\"pcoded-content\">\r\n                                <div className=\"pcoded-inner-content\">\r\n                                    <div className=\"main-body\">\r\n                                        <div className=\"page-wrapper\">\r\n                                            <Suspense fallback={<Loader/>}>\r\n                                                <Switch>\r\n                                                    {menu}\r\n                                                    <Redirect from=\"/\" to={this.props.defaultPath} />\r\n                                                </Switch>\r\n                                            </Suspense>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fullscreen>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        defaultPath: state.defaultPath,\r\n        isFullScreen: state.isFullScreen,\r\n        collapseMenu: state.collapseMenu,\r\n        configBlock: state.configBlock,\r\n        layout: state.layout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreenExit: () => dispatch({type: actionTypes.FULL_SCREEN_EXIT}),\r\n        onComponentWillMount: () => dispatch({type: actionTypes.COLLAPSE_MENU})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(AdminLayout));"],"sourceRoot":""}