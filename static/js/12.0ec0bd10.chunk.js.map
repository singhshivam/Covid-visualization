{"version":3,"sources":["Dashboard/Gantt.js"],"names":["Gantt","props","_this","Object","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","columns","type","label","rows","fetchCSV","bind","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_this2","d3","concat","window","appURL","then","data","forEach","row","vals","values","moment","toDate","match","push","_home_shivam_code_covid_visualization_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","slice","setState","_this$state","console","log","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","md","xl","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Body","className","react_google_charts__WEBPACK_IMPORTED_MODULE_12__","chartType","width","height","options","gantt","trackHeight","barHeight","palette","color","dark","light","legendToggle","React","Component"],"mappings":"yOAMMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAA,OACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAWDQ,MAAQ,CACTC,QAVY,CACZ,CAAEC,KAAM,SAAUC,MAAO,WACzB,CAAED,KAAM,SAAUC,MAAO,aACzB,CAAED,KAAM,OAAQC,MAAO,cACvB,CAAED,KAAM,OAAQC,MAAO,YACvB,CAAED,KAAM,SAAUC,MAAO,YACzB,CAAED,KAAM,SAAUC,MAAO,oBACzB,CAAED,KAAM,SAAUC,MAAO,iBAIzBC,KAAM,IAEVX,EAAKY,SAAWZ,EAAKY,SAASC,KAAdZ,OAAAa,EAAA,EAAAb,CAAAD,IAhBDA,mFAmBfG,KAAKS,8CAEE,IAAAG,EAAAZ,KACPa,IAAA,GAAAC,OAAUC,OAAOC,OAAjB,eACKC,KAAK,SAAAC,GACF,IAAIV,EAAO,GACXU,EAAKC,QAAQ,SAAAC,GACT,IAAIC,EAAOvB,OAAOwB,OAAOF,GACzBC,EAAK,GAAKE,IAAOF,EAAK,GAAI,cAAcG,SACxCH,EAAK,GAAKE,IAAOF,EAAK,GAAI,cAAcG,SACxCH,EAAK,IAAMA,EAAK,GAAGI,MAAM,OACzBjB,EAAKkB,KAAL,GAAAZ,OAAAhB,OAAA6B,EAAA,EAAA7B,CAAcuB,EAAKO,MAAM,EAAG,IAA5B,CAAgC,KAAM,UAE1ChB,EAAKiB,SAAS,CAAErB,KAAMA,uCAGzB,IAAAsB,EACqB9B,KAAKI,MAAvBI,EADHsB,EACGtB,KAAMH,EADTyB,EACSzB,QACd0B,QAAQC,IAAIxB,GAsEZ,OACIyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,KAAN,KACIR,EAAAC,EAAAC,cAAA,MAAIO,UAAU,QAAd,iBAGAT,EAAAC,EAAAC,cAAA,wBAGAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,UAAU,QACV1B,KAAI,CAAGb,GAAHS,OAAAhB,OAAA6B,EAAA,EAAA7B,CAAeU,IACnBqC,MAAM,OACNC,OAAO,OACPC,QArFV,CACVD,OAAQ,IACRE,MAAO,CACHC,YAAa,GACbC,UAAW,GACXC,QAAS,CACL,CACIC,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,WAEb,CACIF,MAAS,UACTC,KAAQ,UACRC,MAAS,cAsBDC,cAAY,eA7HxBC,IAAMC,WAuIX9D","file":"static/js/12.0ec0bd10.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport * as d3 from 'd3'\nimport Chart from \"react-google-charts\";\nimport moment from 'moment'\n\nclass Gantt extends React.Component {\n    constructor(props) {\n        super(props)\n\n        const columns = [\n            { type: \"string\", label: \"Task ID\" },\n            { type: \"string\", label: \"Task Name\" },\n            { type: \"date\", label: \"Start Date\" },\n            { type: \"date\", label: \"End Date\" },\n            { type: \"number\", label: \"Duration\" },\n            { type: \"number\", label: \"Percent Complete\" },\n            { type: \"string\", label: \"Dependencies\" }\n        ]\n        this.state = {\n            columns: columns,\n            rows: []\n        }\n        this.fetchCSV = this.fetchCSV.bind(this)\n    }\n    componentDidMount() {\n        this.fetchCSV()\n    }\n    fetchCSV() {\n        d3.csv(`${window.appURL}/gantt.csv`)\n            .then(data => {\n                let rows = []\n                data.forEach(row => {\n                    let vals = Object.values(row)\n                    vals[2] = moment(vals[2], \"YYYY-MM-DD\").toDate()\n                    vals[3] = moment(vals[3], \"YYYY-MM-DD\").toDate()\n                    vals[4] = +vals[4].match(/\\d*/)\n                    rows.push([...vals.slice(0, 5), null, null])\n                })\n                this.setState({ rows: rows })\n            })\n    }\n    render() {\n        const { rows, columns } = this.state\n        console.log(rows)\n        let options = {\n            height: 4000,\n            gantt: {\n                trackHeight: 20,\n                barHeight: 10,\n                palette: [\n                    {\n                        \"color\": \"#5e97f6\",\n                        \"dark\": \"#2a56c6\",\n                        \"light\": \"#c6dafc\"\n                    },\n                    {\n                        \"color\": \"#db4437\",\n                        \"dark\": \"#a52714\",\n                        \"light\": \"#f4c7c3\"\n                    },\n                    {\n                        \"color\": \"#f2a600\",\n                        \"dark\": \"#ee8100\",\n                        \"light\": \"#fce8b2\"\n                    },\n                    {\n                        \"color\": \"#0f9d58\",\n                        \"dark\": \"#0b8043\",\n                        \"light\": \"#b7e1cd\"\n                    },\n                    {\n                        \"color\": \"#ab47bc\",\n                        \"dark\": \"#6a1b9a\",\n                        \"light\": \"#e1bee7\"\n                    },\n                    {\n                        \"color\": \"#00acc1\",\n                        \"dark\": \"#00838f\",\n                        \"light\": \"#b2ebf2\"\n                    },\n                    {\n                        \"color\": \"#ff7043\",\n                        \"dark\": \"#e64a19\",\n                        \"light\": \"#ffccbc\"\n                    },\n                    {\n                        \"color\": \"#9e9d24\",\n                        \"dark\": \"#827717\",\n                        \"light\": \"#f0f4c3\"\n                    },\n                    {\n                        \"color\": \"#5c6bc0\",\n                        \"dark\": \"#3949ab\",\n                        \"light\": \"#c5cae9\"\n                    },\n                    {\n                        \"color\": \"#f06292\",\n                        \"dark\": \"#e91e63\",\n                        \"light\": \"#f8bbd0\"\n                    },\n                    {\n                        \"color\": \"#00796b\",\n                        \"dark\": \"#004d40\",\n                        \"light\": \"#b2dfdb\"\n                    },\n                    {\n                        \"color\": \"#c2185b\",\n                        \"dark\": \"#880e4f\",\n                        \"light\": \"#f48fb1\"\n                    }\n                ]\n            }\n        };\n        return (\n            <Row>\n                <Col md={12} xl={12}>\n                    <Card>\n                        <Card.Body>\n                            <h6 className='mb-4'>\n                                Epidemic Span\n                            </h6>\n                            <p>\n                                Gantt Chart\n                            </p>\n                            <Chart\n                                chartType=\"Gantt\"\n                                data={[columns, ...rows]}\n                                width=\"100%\"\n                                height=\"100%\"\n                                options={options}\n                                legendToggle\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default Gantt;"],"sourceRoot":""}