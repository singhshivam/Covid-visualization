{"version":3,"sources":["../node_modules/d3-tip/index.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespaces.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespace.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/creator.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/local.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/matcher.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/on.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selector.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/data.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/window.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/text.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/html.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/index.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/select.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/order.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/call.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/node.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/size.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/each.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/style.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/property.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/append.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/exponent.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatRounded.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatTypes.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDefault.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/locale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatGroup.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-svg-legend/node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ascending.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisector.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisect.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/range.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ticks.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/max.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/sum.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/zip.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/number.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/continuous.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionRound.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/linear.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/time.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/colors.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category10.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20b.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20c.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/cubehelix.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/rainbow.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/viridis.js","../node_modules/d3-svg-legend/indexRollupNext.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/select.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/cubehelix.js"],"names":["d3_collection__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d3_selection__WEBPACK_IMPORTED_MODULE_1__","d3_selection__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","direction","offset","html","rootElement","document","body","node","initNode","svg","point","target","tip","vis","element","svgNode","tagName","toLowerCase","ownerSVGElement","getSVGNode","createSVGPoint","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","this","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","style","classed","directionCallbacks","get","top","left","hide","attr","n","v","functor","destroy","remove","Object","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","keys","div","createElement","targetShape","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform","xhtml","namespaces","xlink","xml","xmlns","namespace","name","prefix","indexOf","hasOwnProperty","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","nextId","Local","_","toString","constructor","id","set","value","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","typename","on","__on","o","j","m","type","removeEventListener","capture","onAdd","wrap","d","addEventListener","push","none","src_selector","querySelector","empty","sparse","update","EnterNode","parent","datum","_next","_parent","child","insertBefore","next","querySelectorAll","keyPrefix","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","a","b","NaN","src_window","defaultView","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","map","merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","callback","nodes","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","getComputedStyle","getPropertyValue","property","text","append","create","insert","before","t","typenames","parseTypenames","dispatch","prefixExponent","formatDecimal","p","toExponential","coefficient","src_exponent","abs","formatRounded","exponent","formatTypes","","out","toPrecision","%","toFixed","round","c","f","g","_p","r","max","floor","X","toUpperCase","_x","re","formatSpecifier","specifier","FormatSpecifier","exec","Error","fill","align","sign","symbol","zero","comma","precision","prefixes","identity","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","src_locale","locale","grouping","thousands","substring","reverse","currency","decimal","newFormat","test","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","formatPrefix","k","pow","noop","dispatch_dispatch","Dispatch","concat","types","T","copy","that","src_dispatch","src_ascending","bisector","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","array_array","src_range","start","stop","step","ceil","range","e10","sqrt","e5","e2","ticks","count","tickStep","step0","step1","log","LN10","error","src_max","array","sum","src_array_array","array_map","array_slice","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","domain","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","source","interpolate","clamp","continuous","piecewise","output","input","src_value","rescale","scale","deinterpolateClamp","invert","reinterpolateClamp","rangeRound","src_round","src_tickFormat","isNaN","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear","src_number","colors","cubehelix_cubehelix","hue","cubehelixGamma","cubehelix","end","h","src_cubehelix","color","l","opacity","gamma","cubehelixLong","ramp","_typeof","Symbol","iterator","obj","d3_identity","d3_reverse","arr","mirror","indexRollupNext_d3_textWrapping","word","words","line","dy","parseFloat","tspan","getComputedTextLength","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","labels","classPrefix","labelWidth","d3_calcType","ascending","cells","labelFormat","labelDelimiter","invertExtent","feature","d3_quantLegend","increment","d3_linearLegend","d3_ordinalLegend","gen","undefined","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","dataValues","labelValues","d3_placement","orient","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","cellDispatcher","d3_cellOver","d3_cellOut","d3_cellClick","d3_title","title","titleWidth","cellsSvg","yOffset","xOffset","d3_defaultLocale","d3_defaultFormatSpecifier","d3_defaultDelimiter","indexRollupNext_index","legendColor","shapePadding","useClass","labelOffset","labelWrap","legendDispatcher","legend","cellEnter","transition","textSize","shapeSize","textAlign","cellSize","textWrap","legendSize","legendG","stroke","maxH","maxW","legendSymbol","legendHelpers","thresholdLabels","_ref","deg2rad","PI","rad2deg","A","B","C","D","E","ED","EB","BC_DA","Cubehelix","bl","atan2","cubehelixConvert","define","brighter","darker","rgb","cosh","cos","sinh","sin"],"mappings":"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","file":"static/js/1.673aa3db.chunk.js","sourcesContent":["/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection';\nimport { selection, select } from 'd3-selection'; // Public - constructs a new tooltip\n//\n// Returns a tip\n\nexport default function () {\n  var direction = d3TipDirection,\n      offset = d3TipOffset,\n      html = d3TipHTML,\n      rootElement = document.body,\n      node = initNode(),\n      svg = null,\n      point = null,\n      target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    if (!svg) return;\n    point = svg.createSVGPoint();\n    rootElement.appendChild(node);\n  } // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n\n\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir = direction.apply(this, args),\n        nodel = getNodeEl(),\n        i = directions.length,\n        coords,\n        scrollTop = document.documentElement.scrollTop || rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft || rootElement.scrollLeft;\n    nodel.html(content).style('opacity', 1).style('pointer-events', 'all');\n\n    while (i--) {\n      nodel.classed(directions[i], false);\n    }\n\n    coords = directionCallbacks.get(dir).apply(this);\n    nodel.classed(dir, true).style('top', coords.top + poffset[0] + scrollTop + 'px').style('left', coords.left + poffset[1] + scrollLeft + 'px');\n    return tip;\n  }; // Public - hide the tooltip\n  //\n  // Returns a tip\n\n\n  tip.hide = function () {\n    var nodel = getNodeEl();\n    nodel.style('opacity', 0).style('pointer-events', 'none');\n    return tip;\n  }; // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.attr = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.attr.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.style = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.style.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n\n\n  tip.direction = function (v) {\n    if (!arguments.length) return direction;\n    direction = v == null ? v : functor(v);\n    return tip;\n  }; // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n\n\n  tip.offset = function (v) {\n    if (!arguments.length) return offset;\n    offset = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n\n\n  tip.html = function (v) {\n    if (!arguments.length) return html;\n    html = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n\n\n  tip.rootElement = function (v) {\n    if (!arguments.length) return rootElement;\n    rootElement = v == null ? v : functor(v);\n    return tip;\n  }; // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n\n\n  tip.destroy = function () {\n    if (node) {\n      getNodeEl().remove();\n      node = null;\n    }\n\n    return tip;\n  };\n\n  function d3TipDirection() {\n    return 'n';\n  }\n\n  function d3TipOffset() {\n    return [0, 0];\n  }\n\n  function d3TipHTML() {\n    return ' ';\n  }\n\n  var directionCallbacks = map({\n    n: directionNorth,\n    s: directionSouth,\n    e: directionEast,\n    w: directionWest,\n    nw: directionNorthWest,\n    ne: directionNorthEast,\n    sw: directionSouthWest,\n    se: directionSouthEast\n  }),\n      directions = directionCallbacks.keys();\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.se.y,\n      left: bbox.se.x\n    };\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'));\n    div.style('position', 'absolute').style('top', 0).style('opacity', 0).style('pointer-events', 'none').style('box-sizing', 'border-box');\n    return div.node();\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node();\n    if (!svgNode) return null;\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode;\n    return svgNode.ownerSVGElement;\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode(); // re-add node to DOM\n\n      rootElement.appendChild(node);\n    }\n\n    return select(node);\n  } // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n\n\n  function getScreenBBox(targetShape) {\n    var targetel = target || targetShape;\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n\n    var bbox = {},\n        matrix = targetel.getScreenCTM(),\n        tbbox = targetel.getBBox(),\n        width = tbbox.width,\n        height = tbbox.height,\n        x = tbbox.x,\n        y = tbbox.y;\n    point.x = x;\n    point.y = y;\n    bbox.nw = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x -= width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y -= height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x -= width / 2;\n    point.y -= height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.s = point.matrixTransform(matrix);\n    return bbox;\n  } // Private - replace D3JS 3.X d3.functor() function\n\n\n  function functor(v) {\n    return typeof v === 'function' ? v : function () {\n      return v;\n    };\n  }\n\n  return tip;\n}","export var xhtml = \"http://www.w3.org/1999/xhtml\";\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};","import namespaces from \"./namespaces\";\nexport default function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n}","import namespace from \"./namespace\";\nimport { xhtml } from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}","var nextId = 0;\nexport default function local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function get(node) {\n    var id = this._;\n\n    while (!(id in node)) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node[id];\n  },\n  set: function set(node, value) {\n    return node[this._] = value;\n  },\n  remove: function remove(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function toString() {\n    return this._;\n  }\n};","var matcher = function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function matcher(selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;","var filterEvents = {};\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\nexport default function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n}\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}","function none() {}\n\nexport default function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}","function empty() {\n  return [];\n}\n\nexport default function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}","export default function (update) {\n  return new Array(update.length);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { Selection } from \"./index\";\nimport { EnterNode } from \"./enter\";\nimport constant from \"../constant\";\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}","import { Selection } from \"./index\";\nexport default function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}","export default function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n}","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function () {\n  return this.each(raise);\n}","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function () {\n  return this.each(lower);\n}","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function (name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function () {\n  return this.each(remove);\n}","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n}","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\nexport var root = [null];\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\nexport default selection;","import { Selection } from \"./index\";\nimport selector from \"../selector\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import { Selection } from \"./index\";\nimport selectorAll from \"../selectorAll\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}","import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}","import { Selection } from \"./index\";\nexport default function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}","export default function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}","export default function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}","export default function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n}","export default function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}","export default function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n}","export default function () {\n  return !this.node();\n}","export default function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function (name, value, priority) {\n  var node;\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : defaultView(node = this.node()).getComputedStyle(node, null).getPropertyValue(name);\n}","function propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\nexport default function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}","import creator from \"../creator\";\nexport default function (name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}","export default function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}","import formatDecimal from \"./formatDecimal\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\nexport default {\n  \"\": formatDefault,\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      case \"e\":\n        break out;\n\n      default:\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}","import formatTypes from \"./formatTypes\"; // [[fill]align][sign][symbol][0][width][,][.precision][type]\n\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\nexport default function (specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\"; // The \"n\" type is an alias for \",g\".\n\n  if (type === \"n\") comma = true, type = \"g\"; // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\"; // If zero fill is specified, padding goes after sign and before digits.\n\n  if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\";\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width == null ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0)) + this.type;\n};","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport { prefixExponent } from \"./formatPrefixAuto\";\nvar prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n\nfunction identity(x) {\n  return x;\n}\n\nexport default function (locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision == null ? type ? 6 : 12 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true); // Perform the initial formatting.\n\n        value = formatType(value, precision); // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 < c && c < 58 || type === \"x\" && 96 < c && c < 103 || type === \"X\" && 64 < c && c < 71) {\n              valueNegative = true;\n              break;\n            }\n          }\n        } // Compute the prefix and suffix.\n\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : \"-\" : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          return valuePrefix + value + valueSuffix + padding;\n\n        case \"=\":\n          return valuePrefix + padding + value + valueSuffix;\n\n        case \"^\":\n          return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","import exponent from \"./exponent\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","import range from \"./range\";\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(Math.ceil(start / step) * step, Math.floor(stop / step) * step + step / 2, // inclusive\n  step);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) {\n      if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n    }\n\n    while (++i < n) {\n      if ((b = array[i]) != null && b > a) a = b;\n    }\n  } else {\n    while (++i < n) {\n      if ((b = f(array[i], i, array)) != null && b >= b) {\n        a = b;\n        break;\n      }\n    }\n\n    while (++i < n) {\n      if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n  }\n\n  return a;\n}","export default function (array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) {\n      if (a = +array[i]) s += a;\n    } // Note: zero and null are equivalent.\n\n  } else {\n    while (++i < n) {\n      if (a = +f(array[i], i, array)) s += a;\n    }\n  }\n\n  return s;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateRound } from \"d3-interpolate\";\nimport { map, slice } from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\nvar unit = [0, 1];\nexport function deinterpolateLinear(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function (a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function (x) {\n      return x <= a ? 0 : x >= b ? 1 : d(x);\n    };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function (a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function (t) {\n      return t <= 0 ? a : t >= 1 ? b : r(t);\n    };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());\n} // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function (y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import exponent from \"./exponent\";\nexport default function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}","import exponent from \"./exponent\";\nexport default function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}","import { ticks, tickStep } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function (count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}","import { bisector, tickStep } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport { map } from \"./array\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport nice from \"./nice\";\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function (i) {\n        return i[2];\n      }).right(tickIntervals, target);\n\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function (interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function (interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function () {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\nexport default function () {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}","export default function (s) {\n  return s.match(/.{6}/g).map(function (x) {\n    return \"#\" + x;\n  });\n}","import colors from \"./colors\";\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");","import colors from \"./colors\";\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");","import colors from \"./colors\";\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");","import colors from \"./colors\";\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");","import { cubehelix as colorCubehelix } from \"d3-color\";\nimport color, { hue } from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nvar rainbow = cubehelix();\nexport default function (t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));","import { select } from 'd3-selection';\nimport { format, formatLocale, formatPrefix, formatSpecifier } from 'd3-format';\nimport { dispatch } from 'd3-dispatch';\nimport { scaleLinear } from 'd3-scale';\nimport { max, sum } from 'd3-array';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n\n  return mirror;\n}; //Text wrapping code adapted from Mike Bostock\n\n\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n    var i = labels.length;\n\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale); //for d3.scaleSequential that doesn't have a range function\n\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return {\n        data: d,\n        label: type.labels[i]\n      };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n  d3_defaultLocale: {\n    format: format,\n    formatPrefix: formatPrefix\n  },\n  d3_defaultFormatSpecifier: \".01f\",\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); // sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    }); //sets scale\n    //everything is fill except for line which is stroke,\n\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes); //creates shape\n\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n\n      return bbox;\n    });\n    var maxH = max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher); //remove old shapes\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); // sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    var maxH = max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = max(shapeSize, function (d) {\n      return d.width;\n    });\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n\n    return _values[0] + \" or more\";\n  }\n\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\nexport { color as legendColor, size as legendSize, symbol as legendSymbol, legendHelpers };\nexport default index;","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n}","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;","import define, { extend } from \"./define.js\";\nimport { Color, rgbConvert, Rgb, darker as _darker, brighter as _brighter } from \"./color.js\";\nimport { deg2rad, rad2deg } from \"./math.js\";\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));"],"sourceRoot":""}