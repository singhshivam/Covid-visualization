{"version":3,"sources":["../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespaces.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespace.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/creator.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/local.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/matcher.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/on.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selector.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/data.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/window.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/text.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/html.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/index.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/select.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/order.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/call.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/node.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/size.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/each.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/style.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/property.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/append.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/exponent.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatRounded.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatTypes.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDefault.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/locale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatGroup.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-svg-legend/node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ascending.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisector.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisect.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/range.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ticks.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/max.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/sum.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/zip.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/number.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/continuous.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionRound.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/linear.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/time.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/colors.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category10.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20b.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20c.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/cubehelix.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/rainbow.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/viridis.js","../node_modules/d3-svg-legend/indexRollupNext.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/select.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-tip/index.js"],"names":["xhtml","namespaces","svg","xlink","xml","xmlns","namespace","name","prefix","i","indexOf","slice","hasOwnProperty","space","local","creator","fullname","this","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","nextId","Local","_","toString","prototype","constructor","get","node","id","parentNode","set","value","remove","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","call","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","typename","on","__on","o","j","m","length","type","removeEventListener","capture","onAdd","wrap","d","addEventListener","push","none","src_selector","querySelector","empty","sparse","update","Array","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","querySelectorAll","keyPrefix","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","a","b","NaN","src_window","defaultView","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","n","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","x","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","map","merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","callback","arguments","apply","nodes","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","style","priority","removeProperty","setProperty","getComputedStyle","getPropertyValue","property","classed","text","html","append","create","insert","before","t","typenames","parseTypenames","dispatch","prefixExponent","formatDecimal","p","toExponential","coefficient","src_exponent","abs","formatRounded","exponent","formatTypes","","out","toPrecision","%","toFixed","round","c","e","f","g","_p","r","s","max","floor","X","toUpperCase","_x","re","formatSpecifier","specifier","FormatSpecifier","exec","Error","fill","align","sign","symbol","zero","width","comma","precision","prefixes","identity","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","src_locale","locale","grouping","thousands","substring","reverse","currency","decimal","newFormat","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","formatPrefix","k","pow","noop","dispatch_dispatch","Dispatch","concat","types","T","copy","that","args","src_dispatch","src_ascending","bisector","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","array_array","src_range","start","stop","step","ceil","range","e10","sqrt","e5","e2","ticks","count","tickStep","step0","step1","log","LN10","error","src_max","array","sum","src_array_array","array_map","array_slice","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","domain","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","source","target","interpolate","clamp","continuous","piecewise","output","input","src_value","rescale","scale","deinterpolateClamp","invert","y","reinterpolateClamp","rangeRound","src_round","src_tickFormat","isNaN","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear","src_number","colors","cubehelix_cubehelix","hue","cubehelixGamma","cubehelix","end","h","Object","src_cubehelix","color","l","opacity","gamma","cubehelixLong","ramp","_typeof","Symbol","iterator","obj","d3_identity","d3_reverse","arr","mirror","indexRollupNext_d3_textWrapping","word","words","line","dy","parseFloat","tspan","pop","getComputedTextLength","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","labels","classPrefix","labelWidth","d3_calcType","ascending","cells","labelFormat","labelDelimiter","invertExtent","feature","d3_quantLegend","increment","d3_linearLegend","d3_ordinalLegend","gen","undefined","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","dataValues","labelValues","d3_placement","orient","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","cellDispatcher","d3_cellOver","d3_cellOut","d3_cellClick","d3_title","title","titleWidth","cellsSvg","yOffset","getBBox","height","xOffset","d3_defaultLocale","d3_defaultFormatSpecifier","d3_defaultDelimiter","indexRollupNext_index","legendColor","shapePadding","useClass","labelOffset","labelWrap","legendDispatcher","legend","cellEnter","transition","textSize","shapeSize","textAlign","cellSize","textWrap","legendSize","legendG","bbox","stroke","maxH","maxW","offset","legendSymbol","legendHelpers","thresholdLabels","_ref","__webpack_exports__","deg2rad","PI","rad2deg","__webpack_require__","A","B","C","D","E","ED","EB","BC_DA","Cubehelix","bl","atan2","cubehelixConvert","define","brighter","darker","rgb","cosh","cos","sinh","sin","d3_collection__WEBPACK_IMPORTED_MODULE_0__","d3_selection__WEBPACK_IMPORTED_MODULE_1__","d3_selection__WEBPACK_IMPORTED_MODULE_2__","direction","rootElement","body","initNode","point","tip","vis","element","svgNode","tagName","ownerSVGElement","getSVGNode","createSVGPoint","show","SVGElement","coords","content","poffset","dir","nodel","getNodeEl","directions","scrollTop","scrollLeft","directionCallbacks","top","hide","functor","destroy","getScreenBBox","offsetHeight","offsetWidth","w","nw","ne","sw","se","keys","div","targetShape","targetel","getScreenCTM","matrix","tbbox","matrixTransform"],"mappings":"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","file":"static/js/3.02a23aac.chunk.js","sourcesContent":["export var xhtml = \"http://www.w3.org/1999/xhtml\";\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};","import namespaces from \"./namespaces\";\nexport default function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n}","import namespace from \"./namespace\";\nimport { xhtml } from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}","var nextId = 0;\nexport default function local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function get(node) {\n    var id = this._;\n\n    while (!(id in node)) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node[id];\n  },\n  set: function set(node, value) {\n    return node[this._] = value;\n  },\n  remove: function remove(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function toString() {\n    return this._;\n  }\n};","var matcher = function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function matcher(selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;","var filterEvents = {};\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\nexport default function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n}\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}","function none() {}\n\nexport default function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}","function empty() {\n  return [];\n}\n\nexport default function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}","export default function (update) {\n  return new Array(update.length);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { Selection } from \"./index\";\nimport { EnterNode } from \"./enter\";\nimport constant from \"../constant\";\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}","import { Selection } from \"./index\";\nexport default function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}","export default function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n}","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function () {\n  return this.each(raise);\n}","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function () {\n  return this.each(lower);\n}","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function (name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function () {\n  return this.each(remove);\n}","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n}","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\nexport var root = [null];\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\nexport default selection;","import { Selection } from \"./index\";\nimport selector from \"../selector\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import { Selection } from \"./index\";\nimport selectorAll from \"../selectorAll\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}","import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}","import { Selection } from \"./index\";\nexport default function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}","export default function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}","export default function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}","export default function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n}","export default function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}","export default function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n}","export default function () {\n  return !this.node();\n}","export default function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function (name, value, priority) {\n  var node;\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : defaultView(node = this.node()).getComputedStyle(node, null).getPropertyValue(name);\n}","function propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\nexport default function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}","import creator from \"../creator\";\nexport default function (name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}","export default function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}","import formatDecimal from \"./formatDecimal\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\nexport default {\n  \"\": formatDefault,\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      case \"e\":\n        break out;\n\n      default:\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}","import formatTypes from \"./formatTypes\"; // [[fill]align][sign][symbol][0][width][,][.precision][type]\n\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\nexport default function (specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\"; // The \"n\" type is an alias for \",g\".\n\n  if (type === \"n\") comma = true, type = \"g\"; // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\"; // If zero fill is specified, padding goes after sign and before digits.\n\n  if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\";\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width == null ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0)) + this.type;\n};","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport { prefixExponent } from \"./formatPrefixAuto\";\nvar prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n\nfunction identity(x) {\n  return x;\n}\n\nexport default function (locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision == null ? type ? 6 : 12 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true); // Perform the initial formatting.\n\n        value = formatType(value, precision); // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 < c && c < 58 || type === \"x\" && 96 < c && c < 103 || type === \"X\" && 64 < c && c < 71) {\n              valueNegative = true;\n              break;\n            }\n          }\n        } // Compute the prefix and suffix.\n\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : \"-\" : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          return valuePrefix + value + valueSuffix + padding;\n\n        case \"=\":\n          return valuePrefix + padding + value + valueSuffix;\n\n        case \"^\":\n          return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","import exponent from \"./exponent\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","import range from \"./range\";\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(Math.ceil(start / step) * step, Math.floor(stop / step) * step + step / 2, // inclusive\n  step);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) {\n      if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n    }\n\n    while (++i < n) {\n      if ((b = array[i]) != null && b > a) a = b;\n    }\n  } else {\n    while (++i < n) {\n      if ((b = f(array[i], i, array)) != null && b >= b) {\n        a = b;\n        break;\n      }\n    }\n\n    while (++i < n) {\n      if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n  }\n\n  return a;\n}","export default function (array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) {\n      if (a = +array[i]) s += a;\n    } // Note: zero and null are equivalent.\n\n  } else {\n    while (++i < n) {\n      if (a = +f(array[i], i, array)) s += a;\n    }\n  }\n\n  return s;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateRound } from \"d3-interpolate\";\nimport { map, slice } from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\nvar unit = [0, 1];\nexport function deinterpolateLinear(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function (a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function (x) {\n      return x <= a ? 0 : x >= b ? 1 : d(x);\n    };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function (a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function (t) {\n      return t <= 0 ? a : t >= 1 ? b : r(t);\n    };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());\n} // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function (y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import exponent from \"./exponent\";\nexport default function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}","import exponent from \"./exponent\";\nexport default function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}","import { ticks, tickStep } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function (count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}","import { bisector, tickStep } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport { map } from \"./array\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport nice from \"./nice\";\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function (i) {\n        return i[2];\n      }).right(tickIntervals, target);\n\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function (interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function (interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function () {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\nexport default function () {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}","export default function (s) {\n  return s.match(/.{6}/g).map(function (x) {\n    return \"#\" + x;\n  });\n}","import colors from \"./colors\";\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");","import colors from \"./colors\";\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");","import colors from \"./colors\";\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");","import colors from \"./colors\";\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");","import { cubehelix as colorCubehelix } from \"d3-color\";\nimport color, { hue } from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nvar rainbow = cubehelix();\nexport default function (t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));","import { select } from 'd3-selection';\nimport { format, formatLocale, formatPrefix, formatSpecifier } from 'd3-format';\nimport { dispatch } from 'd3-dispatch';\nimport { scaleLinear } from 'd3-scale';\nimport { max, sum } from 'd3-array';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n\n  return mirror;\n}; //Text wrapping code adapted from Mike Bostock\n\n\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n    var i = labels.length;\n\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale); //for d3.scaleSequential that doesn't have a range function\n\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return {\n        data: d,\n        label: type.labels[i]\n      };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n  d3_defaultLocale: {\n    format: format,\n    formatPrefix: formatPrefix\n  },\n  d3_defaultFormatSpecifier: \".01f\",\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); // sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    }); //sets scale\n    //everything is fill except for line which is stroke,\n\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes); //creates shape\n\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n\n      return bbox;\n    });\n    var maxH = max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"); //add event handlers\n\n    helper.d3_addEvents(cellEnter, legendDispatcher); //remove old shapes\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap); // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n\n    cell = cellEnter.merge(cell); // sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    var maxH = max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = max(shapeSize, function (d) {\n      return d.width;\n    });\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1; //positions cells and text\n\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n\n    return _values[0] + \" or more\";\n  }\n\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\nexport { color as legendColor, size as legendSize, symbol as legendSymbol, legendHelpers };\nexport default index;","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n}","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;","import define, { extend } from \"./define.js\";\nimport { Color, rgbConvert, Rgb, darker as _darker, brighter as _brighter } from \"./color.js\";\nimport { deg2rad, rad2deg } from \"./math.js\";\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));","/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection';\nimport { selection, select } from 'd3-selection'; // Public - constructs a new tooltip\n//\n// Returns a tip\n\nexport default function () {\n  var direction = d3TipDirection,\n      offset = d3TipOffset,\n      html = d3TipHTML,\n      rootElement = document.body,\n      node = initNode(),\n      svg = null,\n      point = null,\n      target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    if (!svg) return;\n    point = svg.createSVGPoint();\n    rootElement.appendChild(node);\n  } // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n\n\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir = direction.apply(this, args),\n        nodel = getNodeEl(),\n        i = directions.length,\n        coords,\n        scrollTop = document.documentElement.scrollTop || rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft || rootElement.scrollLeft;\n    nodel.html(content).style('opacity', 1).style('pointer-events', 'all');\n\n    while (i--) {\n      nodel.classed(directions[i], false);\n    }\n\n    coords = directionCallbacks.get(dir).apply(this);\n    nodel.classed(dir, true).style('top', coords.top + poffset[0] + scrollTop + 'px').style('left', coords.left + poffset[1] + scrollLeft + 'px');\n    return tip;\n  }; // Public - hide the tooltip\n  //\n  // Returns a tip\n\n\n  tip.hide = function () {\n    var nodel = getNodeEl();\n    nodel.style('opacity', 0).style('pointer-events', 'none');\n    return tip;\n  }; // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.attr = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.attr.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.style = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.style.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n\n\n  tip.direction = function (v) {\n    if (!arguments.length) return direction;\n    direction = v == null ? v : functor(v);\n    return tip;\n  }; // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n\n\n  tip.offset = function (v) {\n    if (!arguments.length) return offset;\n    offset = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n\n\n  tip.html = function (v) {\n    if (!arguments.length) return html;\n    html = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n\n\n  tip.rootElement = function (v) {\n    if (!arguments.length) return rootElement;\n    rootElement = v == null ? v : functor(v);\n    return tip;\n  }; // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n\n\n  tip.destroy = function () {\n    if (node) {\n      getNodeEl().remove();\n      node = null;\n    }\n\n    return tip;\n  };\n\n  function d3TipDirection() {\n    return 'n';\n  }\n\n  function d3TipOffset() {\n    return [0, 0];\n  }\n\n  function d3TipHTML() {\n    return ' ';\n  }\n\n  var directionCallbacks = map({\n    n: directionNorth,\n    s: directionSouth,\n    e: directionEast,\n    w: directionWest,\n    nw: directionNorthWest,\n    ne: directionNorthEast,\n    sw: directionSouthWest,\n    se: directionSouthEast\n  }),\n      directions = directionCallbacks.keys();\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.se.y,\n      left: bbox.se.x\n    };\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'));\n    div.style('position', 'absolute').style('top', 0).style('opacity', 0).style('pointer-events', 'none').style('box-sizing', 'border-box');\n    return div.node();\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node();\n    if (!svgNode) return null;\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode;\n    return svgNode.ownerSVGElement;\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode(); // re-add node to DOM\n\n      rootElement.appendChild(node);\n    }\n\n    return select(node);\n  } // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n\n\n  function getScreenBBox(targetShape) {\n    var targetel = target || targetShape;\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n\n    var bbox = {},\n        matrix = targetel.getScreenCTM(),\n        tbbox = targetel.getBBox(),\n        width = tbbox.width,\n        height = tbbox.height,\n        x = tbbox.x,\n        y = tbbox.y;\n    point.x = x;\n    point.y = y;\n    bbox.nw = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x -= width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y -= height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x -= width / 2;\n    point.y -= height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.s = point.matrixTransform(matrix);\n    return bbox;\n  } // Private - replace D3JS 3.X d3.functor() function\n\n\n  function functor(v) {\n    return typeof v === 'function' ? v : function () {\n      return v;\n    };\n  }\n\n  return tip;\n}"],"sourceRoot":""}